import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';
import { MainContext, ExtHostContext } from 'vscode/vscode/vs/workbench/api/common/extHost.protocol';
import { extHostNamedCustomer } from '../../services/extensions/common/extHostCustomers.js';
import { IThemeService } from 'monaco-editor/esm/vs/platform/theme/common/themeService.js';

let MainThreadTheming = class MainThreadTheming {
    constructor(extHostContext, themeService) {
        this._themeService = themeService;
        this._proxy = ( extHostContext.getProxy(ExtHostContext.ExtHostTheming));
        this._themeChangeListener = this._themeService.onDidColorThemeChange(e => {
            this._proxy.$onColorThemeChange(this._themeService.getColorTheme().type);
        });
        this._proxy.$onColorThemeChange(this._themeService.getColorTheme().type);
    }
    dispose() {
        this._themeChangeListener.dispose();
    }
};
MainThreadTheming = __decorate([
    extHostNamedCustomer(MainContext.MainThreadTheming),
    ( __param(1, IThemeService))
], MainThreadTheming);

export { MainThreadTheming };
