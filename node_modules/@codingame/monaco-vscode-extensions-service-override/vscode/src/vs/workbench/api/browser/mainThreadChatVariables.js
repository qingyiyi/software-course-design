import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';
import { DisposableMap } from 'monaco-editor/esm/vs/base/common/lifecycle.js';
import { MainContext, ExtHostContext } from 'vscode/vscode/vs/workbench/api/common/extHost.protocol';
import { IChatVariablesService } from 'vscode/vscode/vs/workbench/contrib/chat/common/chatVariables';
import { extHostNamedCustomer } from '../../services/extensions/common/extHostCustomers.js';

let MainThreadChatSlashCommands = class MainThreadChatSlashCommands {
    constructor(extHostContext, _chatVariablesService) {
        this._chatVariablesService = _chatVariablesService;
        this._variables = ( new DisposableMap());
        this._proxy = ( extHostContext.getProxy(ExtHostContext.ExtHostChatVariables));
    }
    dispose() {
        this._variables.clearAndDisposeAll();
    }
    $registerVariable(handle, data) {
        const registration = this._chatVariablesService.registerVariable(data, (messageText, _arg, _model, token) => {
            return this._proxy.$resolveVariable(handle, messageText, token);
        });
        this._variables.set(handle, registration);
    }
    $unregisterVariable(handle) {
        this._variables.deleteAndDispose(handle);
    }
};
MainThreadChatSlashCommands = __decorate([
    extHostNamedCustomer(MainContext.MainThreadChatVariables),
    ( __param(1, IChatVariablesService))
], MainThreadChatSlashCommands);

export { MainThreadChatSlashCommands };
