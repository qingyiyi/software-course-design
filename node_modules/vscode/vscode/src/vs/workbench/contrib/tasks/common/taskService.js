import * as nls from 'monaco-editor/esm/vs/nls.js';
import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';
import { ContextKeyExpr, RawContextKey } from 'monaco-editor/esm/vs/platform/contextkey/common/contextkey.js';
const CustomExecutionSupportedContext = ( new RawContextKey('customExecutionSupported', false, ( nls.localizeWithPath(
 'vs/workbench/contrib/tasks/common/taskService',
 'tasks.customExecutionSupported',
 "Whether CustomExecution tasks are supported. Consider using in the when clause of a \'taskDefinition\' contribution."
))));
const ShellExecutionSupportedContext = ( new RawContextKey('shellExecutionSupported', false, ( nls.localizeWithPath(
 'vs/workbench/contrib/tasks/common/taskService',
 'tasks.shellExecutionSupported',
 "Whether ShellExecution tasks are supported. Consider using in the when clause of a \'taskDefinition\' contribution."
))));
const ProcessExecutionSupportedContext = ( new RawContextKey('processExecutionSupported', false, ( nls.localizeWithPath(
 'vs/workbench/contrib/tasks/common/taskService',
 'tasks.processExecutionSupported',
 "Whether ProcessExecution tasks are supported. Consider using in the when clause of a \'taskDefinition\' contribution."
))));
const TaskExecutionSupportedContext = ( ContextKeyExpr.or(( ContextKeyExpr.and(ShellExecutionSupportedContext, ProcessExecutionSupportedContext)), CustomExecutionSupportedContext));
const ITaskService = ( createDecorator('taskService'));
export { CustomExecutionSupportedContext, ITaskService, ProcessExecutionSupportedContext, ShellExecutionSupportedContext, TaskExecutionSupportedContext };
