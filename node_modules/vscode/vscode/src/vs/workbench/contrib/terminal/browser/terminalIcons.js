import { Codicon } from 'monaco-editor/esm/vs/base/common/codicons.js';
import { localizeWithPath } from 'monaco-editor/esm/vs/nls.js';
import { registerIcon } from 'monaco-editor/esm/vs/platform/theme/common/iconRegistry.js';
const terminalViewIcon = registerIcon('terminal-view-icon', Codicon.terminal, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalViewIcon',
 'View icon of the terminal view.'
)));
const renameTerminalIcon = registerIcon('terminal-rename', Codicon.gear, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'renameTerminalIcon',
 'Icon for rename in the terminal quick menu.'
)));
const killTerminalIcon = registerIcon('terminal-kill', Codicon.trash, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'killTerminalIcon',
 'Icon for killing a terminal instance.'
)));
const newTerminalIcon = registerIcon('terminal-new', Codicon.add, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'newTerminalIcon',
 'Icon for creating a new terminal instance.'
)));
const configureTerminalProfileIcon = registerIcon('terminal-configure-profile', Codicon.gear, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'configureTerminalProfileIcon',
 'Icon for creating a new terminal profile.'
)));
const terminalDecorationMark = registerIcon('terminal-decoration-mark', Codicon.circleSmallFilled, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalDecorationMark',
 'Icon for a terminal decoration mark.'
)));
const terminalDecorationIncomplete = registerIcon('terminal-decoration-incomplete', Codicon.circle, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalDecorationIncomplete',
 'Icon for a terminal decoration of a command that was incomplete.'
)));
const terminalDecorationError = registerIcon('terminal-decoration-error', Codicon.errorSmall, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalDecorationError',
 'Icon for a terminal decoration of a command that errored.'
)));
const terminalDecorationSuccess = registerIcon('terminal-decoration-success', Codicon.circleFilled, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalDecorationSuccess',
 'Icon for a terminal decoration of a command that was successful.'
)));
const commandHistoryRemoveIcon = registerIcon('terminal-command-history-remove', Codicon.close, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalCommandHistoryRemove',
 'Icon for removing a terminal command from command history.'
)));
const commandHistoryOutputIcon = registerIcon('terminal-command-history-output', Codicon.output, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalCommandHistoryOutput',
 'Icon for viewing output of a terminal command.'
)));
const commandHistoryFuzzySearchIcon = registerIcon('terminal-command-history-fuzzy-search', Codicon.searchFuzzy, ( localizeWithPath(
 'vs/workbench/contrib/terminal/browser/terminalIcons',
 'terminalCommandHistoryFuzzySearch',
 'Icon for toggling fuzzy search of command history.'
)));
export { commandHistoryFuzzySearchIcon, commandHistoryOutputIcon, commandHistoryRemoveIcon, configureTerminalProfileIcon, killTerminalIcon, newTerminalIcon, renameTerminalIcon, terminalDecorationError, terminalDecorationIncomplete, terminalDecorationMark, terminalDecorationSuccess, terminalViewIcon };
