import { IExtensionDescription, ExtensionIdentifier } from '../../../../platform/extensions/common/extensions.js';

interface IReadOnlyExtensionDescriptionRegistry {
    containsActivationEvent(activationEvent: string): boolean;
    containsExtension(extensionId: ExtensionIdentifier): boolean;
    getExtensionDescriptionsForActivationEvent(activationEvent: string): IExtensionDescription[];
    getAllExtensionDescriptions(): IExtensionDescription[];
    getExtensionDescription(extensionId: ExtensionIdentifier | string): IExtensionDescription | undefined;
    getExtensionDescriptionByUUID(uuid: string): IExtensionDescription | undefined;
    getExtensionDescriptionByIdOrUUID(extensionId: ExtensionIdentifier | string, uuid: string | undefined): IExtensionDescription | undefined;
}
declare class ExtensionDescriptionRegistrySnapshot {
    readonly versionId: number;
    readonly extensions: readonly IExtensionDescription[];
    constructor(versionId: number, extensions: readonly IExtensionDescription[]);
}

export { ExtensionDescriptionRegistrySnapshot, type IReadOnlyExtensionDescriptionRegistry };
