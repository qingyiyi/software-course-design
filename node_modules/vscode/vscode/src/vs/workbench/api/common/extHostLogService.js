import { __decorate, __param } from '../../../../../../external/tslib/tslib.es6.js';
import { localizeWithPath } from 'monaco-editor/esm/vs/nls.js';
import { ILoggerService } from 'monaco-editor/esm/vs/platform/log/common/log.js';
import { LogService } from 'monaco-editor/esm/vs/platform/log/common/logService.js';
import { IExtHostInitDataService } from './extHostInitDataService.js';
let ExtHostLogService = class ExtHostLogService extends LogService {
    constructor(isWorker, loggerService, initData) {
        const id = initData.remote.isRemote ? 'remoteexthost' : isWorker ? 'workerexthost' : 'exthost';
        const name = initData.remote.isRemote ? ( localizeWithPath(
            'vs/workbench/api/common/extHostLogService',
            'remote',
            "Extension Host (Remote)"
        )) : isWorker ? ( localizeWithPath(
            'vs/workbench/api/common/extHostLogService',
            'worker',
            "Extension Host (Worker)"
        )) : ( localizeWithPath('vs/workbench/api/common/extHostLogService', 'local', "Extension Host"));
        super(loggerService.createLogger(id, { name }));
    }
};
ExtHostLogService = ( __decorate([
    ( __param(1, ILoggerService)),
    ( __param(2, IExtHostInitDataService))
], ExtHostLogService));
export { ExtHostLogService };
