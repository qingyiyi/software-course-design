import { IMarker } from '../../../../../../../external/xterm-headless/typings/xterm-headless.js';

interface ICurrentPartialCommand {
    previousCommandMarker?: IMarker;
    promptStartMarker?: IMarker;
    commandStartMarker?: IMarker;
    commandStartX?: number;
    commandStartLineContent?: string;
    commandRightPromptStartX?: number;
    commandRightPromptEndX?: number;
    commandLines?: IMarker;
    commandExecutedMarker?: IMarker;
    commandExecutedX?: number;
    commandFinishedMarker?: IMarker;
    currentContinuationMarker?: IMarker;
    continuations?: {
        marker: IMarker;
        end: number;
    }[];
    command?: string;
    /**
     * Whether the command line is trusted via a nonce.
     */
    isTrusted?: boolean;
    /**
     * Something invalidated the command before it finished, this will prevent the onCommandFinished
     * event from firing.
     */
    isInvalid?: boolean;
}

export type { ICurrentPartialCommand };
