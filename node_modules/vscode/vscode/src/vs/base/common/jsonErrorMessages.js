import { localizeWithPath } from 'monaco-editor/esm/vs/nls.js';
function getParseErrorMessage(errorCode) {
    switch (errorCode) {
        case 1 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.invalidSymbol',
         'Invalid symbol'
        ));
        case 2 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.invalidNumberFormat',
         'Invalid number format'
        ));
        case 3 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.propertyNameExpected',
         'Property name expected'
        ));
        case 4 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.valueExpected',
         'Value expected'
        ));
        case 5 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.colonExpected',
         'Colon expected'
        ));
        case 6 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.commaExpected',
         'Comma expected'
        ));
        case 7 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.closeBraceExpected',
         'Closing brace expected'
        ));
        case 8 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.closeBracketExpected',
         'Closing bracket expected'
        ));
        case 9 : return ( localizeWithPath(
         'vs/base/common/jsonErrorMessages',
         'error.endOfFileExpected',
         'End of file expected'
        ));
        default:
            return '';
    }
}
export { getParseErrorMessage };
