import { UriComponents, URI } from './uri.js';

interface MarkdownStringTrustedOptions {
    readonly enabledCommands: readonly string[];
}
interface IMarkdownString {
    readonly value: string;
    readonly isTrusted?: boolean | MarkdownStringTrustedOptions;
    readonly supportThemeIcons?: boolean;
    readonly supportHtml?: boolean;
    readonly baseUri?: UriComponents;
    uris?: {
        [href: string]: UriComponents;
    };
}
declare const enum MarkdownStringTextNewlineStyle {
    Paragraph = 0,
    Break = 1
}
declare class MarkdownString implements IMarkdownString {
    value: string;
    isTrusted?: boolean | MarkdownStringTrustedOptions;
    supportThemeIcons?: boolean;
    supportHtml?: boolean;
    baseUri?: URI;
    constructor(value?: string, isTrustedOrOptions?: boolean | {
        isTrusted?: boolean | MarkdownStringTrustedOptions;
        supportThemeIcons?: boolean;
        supportHtml?: boolean;
    });
    appendText(value: string, newlineStyle?: MarkdownStringTextNewlineStyle): MarkdownString;
    appendMarkdown(value: string): MarkdownString;
    appendCodeblock(langId: string, code: string): MarkdownString;
    appendLink(target: URI | string, label: string, title?: string): MarkdownString;
    private _escape;
}

export { type IMarkdownString, MarkdownString, MarkdownStringTextNewlineStyle, type MarkdownStringTrustedOptions };
