interface ErrorListenerCallback {
    (error: any): void;
}
interface ErrorListenerUnbind {
    (): void;
}
declare class ErrorHandler {
    private unexpectedErrorHandler;
    private listeners;
    constructor();
    addListener(listener: ErrorListenerCallback): ErrorListenerUnbind;
    private emit;
    private _removeListener;
    setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void;
    getUnexpectedErrorHandler(): (e: any) => void;
    onUnexpectedError(e: any): void;
    onUnexpectedExternalError(e: any): void;
}
declare const errorHandler: ErrorHandler;

export { ErrorHandler, type ErrorListenerCallback, type ErrorListenerUnbind, errorHandler };
