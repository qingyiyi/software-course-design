import { editor, languages } from 'monaco-editor';
import { EditorAppBase, EditorAppConfigBase } from './editorAppBase.js';
import { UserConfig } from './wrapper.js';
import { Logger } from './logger.js';
export type EditorAppConfigClassic = EditorAppConfigBase & {
    $type: 'classic';
    theme?: editor.BuiltinTheme | string;
    languageExtensionConfig?: languages.ILanguageExtensionPoint;
    languageDef?: languages.IMonarchLanguage;
    themeData?: editor.IStandaloneThemeData;
};
/**
 * The classic monaco-editor app uses the classic monaco-editor configuration.
 */
export declare class EditorAppClassic extends EditorAppBase {
    private config;
    private logger;
    constructor(id: string, userConfig: UserConfig, logger?: Logger);
    getConfig(): EditorAppConfigClassic;
    specifyServices(): editor.IEditorOverrideServices;
    init(): Promise<void>;
    disposeApp(): void;
    isAppConfigDifferent(orgConfig: EditorAppConfigClassic, config: EditorAppConfigClassic, includeModelData: boolean): boolean;
}
//# sourceMappingURL=editorAppClassic.d.ts.map